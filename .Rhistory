library(tidyverse)
library(shiny)
9+9
library(knitr)
library(data.table)
library(Rcpp)
install.packages("shinyjs")
install.packages("shinycss")
shiny::runApp('passaic_nitrate_app')
runApp('passaic_nitrate_app')
runApp('passaic_nitrate_app')
runApp('passaic_nitrate_app')
source("~/passaic_nitrate_app/R/01_load_packages_and_data.R", echo=TRUE)
all_sample_data_series
setwd("~/passaic_nitrate_app")
source("~/passaic_nitrate_app/R/01_load_packages_and_data.R", echo=TRUE)
source_all("R")
source_all <- function(folder) {
files <- list.files(folder, full.names = TRUE)
purrr::walk(files, source)
}
source_all("R")
library(data.table)
read_isco_overall_sample_time_series_data <- function(parameter, stations) {
all_sample_data_series %>%
filter(Parameter == parameter, `Station Name` %in% stations)
}
all_sample_data_series_dt <- as.data.table(all_sample_data_series)
read_isco_overall_sample_time_series_data_dt <- function(parameter, stations) {
all_sample_data_series[Parameter == parameter & `Station Name` %in% stations]
}
parameters <- unique(all_sample_data_series$Parameter)
stations <- unique(all_sample_data_series$`Station Name`)
parameters <- unique(all_sample_data_series$Parameter)[[1]]
microbenchmark::microbenchmark(
dplyr = read_isco_overall_sample_time_series_data(parameter = parameters, stations = stations),
dt = read_isco_overall_sample_time_series_data_dt(parameters, stations)
)
all_sample_data_series_dt
names(all_sample_data_series_dt)
read_isco_overall_sample_time_series_data_dt <- function(parameter, stations) {
all_sample_data_series_dt[Parameter == parameter & `Station Name` %in% stations]
}
parameters <- unique(all_sample_data_series$Parameter)[[1]]
stations <- unique(all_sample_data_series$`Station Name`)
microbenchmark::microbenchmark(
dplyr = read_isco_overall_sample_time_series_data(parameter = parameters, stations = stations),
dt = read_isco_overall_sample_time_series_data_dt(parameters, stations)
)
nrow(all_sample_data_series)
microbenchmark::microbenchmark(
dplyr = read_isco_overall_sample_time_series_data(parameter = parameters, stations = stations),
dt = read_isco_overall_sample_time_series_data_dt(parameters, stations)
)
read_isco_overall_sample_time_series_data
runApp()
runApp()
runApp()
read_isco_sample_time_series_data <- function(sample_event, sample_stations = sample_data_stations,
sample_parameters = sample_data_parameters) {
sample_data %>%
filter(Event == sample_event,
Parameter %in% sample_parameters,
`Station Name` %in% sample_stations
) %>%
left_join(sample_sp %>% select(`Site ID` = SITE_NO, lng = Long, lat = Lat), by = join_by(`Site ID`))
}
read_isco_sample_time_series_data <- function(sample_event, sample_stations = sample_data_stations,
sample_parameters = sample_data_parameters) {
sample_data %>%
filter(Event == sample_event,
Parameter %in% sample_parameters,
`Station Name` %in% sample_stations
) %>%
left_join(sample_sp %>% select(`Site ID` = SITE_NO, lng = Long, lat = Lat), by = join_by(`Site ID`))
}
test <- read_isco_sample_time_series_data(1,unique(sample_data$`Station Name`), unique(sample_data$Parameter))
test
test <- read_isco_sample_time_series_data(1,unique(sample_data$`Station Name`), unique(sample_data$Parameter)) %>% as_tibble()
test
sample_parameter_plot <- function(parameter, event_df) {
df <- event_df %>% filter(Parameter == parameter) %>%
mutate(`Station Name` = str_c(`Station Name`, " (", `TMDL ID`, ")"))
ggplot(df, aes(x = Interval, y = Result, color = `Station Name`)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = 1:24) +
ylab(parameter) +
background_grid(major = "xy", minor = "xy")
}
sample_parameter_plot(parameter = test$Parameter[1], test)
microbenchmark::microbenchmark(
sample_parameter_plot(parameter = test$Parameter[1], test),
purrr::map(unique(test$Parameter), \(x) sample_parameter_plot(x, test))
)
purrr::map(unique(test$Parameter), \(x) sample_parameter_plot(x, test))
plot_grid(purrr::map(unique(test$Parameter), \(x) sample_parameter_plot(x, test)), col = 1)
plot_grid(plotlist = purrr::map(unique(test$Parameter), \(x) sample_parameter_plot(x, test)), ncol = 1)
nrow(test)
